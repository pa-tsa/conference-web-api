name: Terraform Plan Workflow

on:
  workflow_call:
    secrets:
      TF_API_TOKEN:
        required: true

jobs:
  terraformPlanJob:
    name: Terraform Plan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          # terraform_version: 1.4.2
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format
        id: terraform-fmt-step
        working-directory: terraform
        run: terraform fmt -check

      - name: Terraform Init
        id: terraform-init-step
        working-directory: terraform
        run: terraform init

      - name: Terraform Validate
        id: terraform-validate-step
        working-directory: terraform
        run: terraform validate -no-color

      - name: Terraform Plan
        id: terraform-plan-step
        working-directory: terraform
        run: terraform plan -no-color -input=false
        continue-on-error: true

      - name: Publish Terraform Plan to Task Summary
        env:
          SUMMARY: "${{ steps.terraform-plan-step.outputs.stdout }}"
        run: |
          echo "$SUMMARY" >> $GITHUB_STEP_SUMMARY

      - name: Update Pull Request
        id: update-pr-step
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "${{ steps.terraform-plan-step.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style 🖌\`${{ steps.terraform-fmt-step.outcome }}\`
            #### Terraform Initialization ⚙️\`${{ steps.terraform-init-step.outcome }}\`
            #### Terraform Plan 📖\`${{ steps.terraform-plan-step.outcome }}\`
            #### Terraform Validation 🤖\`${{ steps.terraform-validate-step.outcome }}\`
      
            <details><summary>Show Plan</summary>
      
            \`\`\`terraform\n
            ${process.env.PLAN}
            \`\`\`
      
            </details>
      
            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
      
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Plan Status
        if: steps.terraform-plan-step.outcome == 'failure'
        run: exit 1